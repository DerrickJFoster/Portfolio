{"version":3,"sources":["Images/ironximpact.png","Images/kickstART.png","Images/dreamcatcher.png","logo.svg","components/header.js","components/home.js","components/projects.js","components/about.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Item","src","alt","Caption","Component","Projects","href","Ironximpact","KickstART","Dreamcatcher","About","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,4ECA3CD,EAAOC,QAAU,IAA0B,kC,oKCsD5BC,E,iLAhDX,OACE,oCACA,kBAAC,IAAD,CAAUC,UAAU,YAClB,kBAAC,IAASC,KAAV,KACE,yBACED,UAAU,gBACVE,IAAI,6GACJC,IAAI,gBAEN,kBAAC,IAASC,QAAV,KACE,wBAAIJ,UAAU,cAAd,oBACA,mDACA,sMAGJ,kBAAC,IAASC,KAAV,KACE,yBACED,UAAU,gBACVE,IAAI,yFACJC,IAAI,mBAGN,kBAAC,IAASC,QAAV,KACA,wBAAIJ,UAAU,cAAd,oBACE,0CACA,gKAGJ,kBAAC,IAASC,KAAV,KACE,yBACED,UAAU,gBACVE,IAAI,gSACJC,IAAI,gBAGN,kBAAC,IAASC,QAAV,KACA,wBAAIJ,UAAU,cAAd,oBAEE,+CACA,4K,GAzCSK,a,GCFFA,Y,kDC2BJC,E,iLAtBX,OACE,oCACA,yBAAKN,UAAU,mBACb,iDAEA,6BACA,yBAAKA,UAAU,aACb,uBAAGO,KAAK,mDAAkD,yBAAKP,UAAU,YAAWE,IAAKM,OAEzF,uBAAGD,KAAK,qDAAoD,yBAAKP,UAAU,YAAWE,IAAKO,OAE3F,uBAAGF,KAAK,yCAAwC,yBAAKP,UAAU,YAAWE,IAAKQ,OAE/E,+BAGJ,kC,GAlBiBL,aCeRM,E,iLAhBX,OACE,oCACE,yBAAKX,UAAU,SACb,wCACA,yBAAKA,UAAU,mBACb,+iBAKJ,kC,GAZYK,aCeLO,E,iLAbX,OACE,yBAAKZ,UAAU,WACf,uCAEE,sDACA,0DACA,4BAAI,uBAAGO,KAAK,iDAAR,aACJ,kC,GATcF,aCwBPQ,MAdf,WACE,OACE,oCACA,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCRgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.9fa6ecc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ironximpact.a6cc108c.png\";","module.exports = __webpack_public_path__ + \"static/media/kickstART.60359064.png\";","module.exports = __webpack_public_path__ + \"static/media/dreamcatcher.a757e81b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport Carousel from 'react-bootstrap/Carousel'\nimport '../App.css'\n\nclass Header extends Component {\n  render() {\n    return (\n      <>\n      <Carousel className='carousel'>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://footage.framepool.com/shotimg/qf/478639735-gelnhausen-st-mary's-church-hessen-place-of-worship.jpg\"\n            alt=\"First slide\"\n          />\n          <Carousel.Caption>\n            <h1 className='title-name'>Derrick J Foster</h1>\n            <h3>Gelnhausen, Germany</h3>\n            <p>I was born in a German hospital nearly 30 years ago. My mother and I came back to the States when I was only 2 months old. One day I would love to go back and visit.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://ewscripps.brightspotcdn.com/51/cc/5ce2d37240fda947909849aed687/hazy-denver.png\"\n            alt=\"Denver Skyline\"\n          />\n\n          <Carousel.Caption>\n          <h1 className='title-name'>Derrick J Foster</h1>\n            <h3>Denver, CO</h3>\n            <p>Denver has been my home for nearly a decade. It is a wonderful \"up & coming\" place with tons to do and beautiful sights to see.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://scontent.fapa1-2.fna.fbcdn.net/v/t31.0-8/18193223_10155242212933126_8011761476845828112_o.jpg?_nc_cat=104&_nc_oc=AQkVKizVMVyo0QJfoqTXYWvKWe5tJWY2WcL6PghiTdoe6HUobdOtCELGZKb96UEe6jy2C77vGLQKyr3v05PUICCf&_nc_ht=scontent.fapa1-2.fna&oh=1d442264e7a688cb5093353dd7e0590e&oe=5DD2DCA8\"\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n          <h1 className='title-name'>Derrick J Foster</h1>\n\n            <h3>Los Angeles, CA</h3>\n            <p>My end game, the place I want to eventually be. I've always wanted to live here because it is where everything I like comes together.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n      </>\n    )\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\n\nclass Home extends Component {\n  render() {\n    return (\n      <h1>Home Page</h1>\n    )\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport '../App.css'\nimport Ironximpact from '../Images/ironximpact.png'\nimport KickstART from '../Images/kickstART.png'\nimport Dreamcatcher from '../Images/dreamcatcher.png'\nclass Projects extends Component {\n  render() {\n    return (\n      <>\n      <div className='projects-header'>\n        <h1>Featured Projects</h1>\n\n        <hr />\n        <div className=\"container\">\n          <a href='https://derrickjfoster.github.io/ironximpact/#/'><img className='thumbnail'src={Ironximpact}></img></a>\n\n          <a href='https://derrickjfoster.github.io/Artsy-Front-End/'><img className='thumbnail'src={KickstART}></img></a>\n\n          <a href='https://mydreamcatcher.herokuapp.com/'><img className='thumbnail'src={Dreamcatcher}></img></a>\n\n          <hr/>\n        </div>\n      </div>\n      <hr/>\n      </>\n    )\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react'\n\nclass About extends Component {\n  render() {\n    return (\n      <>\n        <div className='about'>\n          <h1>About me</h1>\n          <div className='about-paragraph'>\n            <p>\n              I have always been intrigued by technology. Since a young child I was taking things apart, from R/C cars to PCs I was always looking to find what made it “tick”. I’ve taken that mindset throughout my working career. I am always dissecting the situations or systems and figuring out how I can make them more efficient for not only myself but everyone involved. Doing so has sparked my creative side as well, creating something functional that looks great and operates at a high efficiency is what I strive to do.\n            </p>\n          </div>\n        </div>\n        <hr/>\n      </>\n    )\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react'\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div className='contact'>\n      <h1>Contact</h1>\n      {/* <h3>Get in touch</h3> */}\n        <h6>970•631•7889</h6>\n        <h6>Derrick.J.Foster@gmail.com</h6>\n        <h6><a href='https://www.linkedin.com/in/derrickjonfoster/'>LinkedIn</a></h6>\n        <br/>\n      </div>\n    )\n  }\n}\n\nexport default Contact;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport logo from './logo.svg';\nimport './App.css';\n\n// ROUTES\nimport Header from './components/header'\nimport Home from './components/home'\nimport Projects from './components/projects'\nimport About from './components/about'\nimport Contact from './components/contact'\n\nfunction App() {\n  return (\n    <>\n    <Header />\n\n    <Router>\n    <Projects />\n    <About />\n    <Contact />\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\nimport './App.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}